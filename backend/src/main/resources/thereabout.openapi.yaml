openapi: "3.0.2"
info:
  title: Frontend REST API
  version: "1.0"
paths:

  /backend/api/v1/location/sparse:
    get:
      summary: Get all sparse location history entries for the given date range. If no date range is provided, all entries are returned.
      tags:
        - location
      operationId: getSparseLocations
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date
            example: "2012-01-31"
          required: false
          description: the start of the date range, if no date is provided -infinity is assumed
        - in: query
          name: to
          schema:
            type: string
            format: date
            example: "2012-01-31"
          required: false
          description: the end of the date range, if no date is provided +infinity is assumed
      responses:
        200:
          description: Successful response containing a json object with all location history entries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SparseLocationHistoryResponse"
        500:
          $ref: '#/components/responses/500'
  /backend/api/v1/location:
    get:
      summary: Get all location history entries for the given date range. If no date range is provided, all entries are returned.
      tags:
        - location
      operationId: getLocations
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date
            example: "2012-01-31"
          required: false
          description: the start of the date range, if no date is provided -infinity is assumed
        - in: query
          name: to
          schema:
            type: string
            format: date
            example: "2012-01-31"
          required: false
          description: the end of the date range, if no date is provided +infinity is assumed
      responses:
        200:
          description: Successful response containing a json object with all location history entries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationHistoryResponse"
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Add a new location history entry.
      tags:
        - location
      operationId: addLocation
      requestBody:
        description: location history entry to be added
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationHistoryEntry"
      responses:
        200:
          description: Successful response containing the newly created location history entry
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationHistoryEntry"
        400:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'
  /backend/api/v1/location/{id}:
    delete:
      summary: Delete a specific location history entry.
      tags:
        - location
      operationId: deleteLocation
      parameters:
        - in: path
          name: id
          schema:
            type: number
            example: 42
          required: true
          description: the id of the location history entry to be deleted
      responses:
        204:
          description: The location history entry was successfully deleted
        500:
          $ref: '#/components/responses/500'

  /backend/api/v1/config:
    get:
      summary: Get the frontend configuration.
      tags:
        - frontend
      operationId: getFrontendConfiguration
      responses:
        200:
          description: Successful response containing the frontend configuration, e.g. Google Maps API Key etc.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FrontendConfigurationResponse"
        500:
          $ref: '#/components/responses/500'
  /backend/api/v1/config/import-file:
    get:
      summary: The status of the file import process.
      tags:
        - frontend
      operationId: fileImportStatus
      responses:
        200:
          description: Successful response containing the status of the file import process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileImportStatus'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Import location data from a file.
      tags:
        - frontend
      operationId: importFromFile
      requestBody:
          description: The file to import
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
      responses:
        204:
          description: The file is successfully being imported.
        500:
          $ref: '#/components/responses/500'

components:
  schemas:
    FileImportStatus:
      description: The status of the file import process.
      type: object
      required:
        - status
        - progress
      properties:
        status:
          type: string
          example: "IN_PROGRESS"
          enum:
            - IN_PROGRESS
            - IDLE
        progress:
          type: number
          example: 60
          description: The progress of the file import process from 0 to 100.
    SparseLocationHistoryResponse:
      type: array
      items:
        $ref: "#/components/schemas/SparseLocationHistoryEntry"
      x-field-extra-annotation: "@lombok.Builder.Default"
    LocationHistoryResponse:
      type: array
      items:
        $ref: "#/components/schemas/LocationHistoryEntry"
      x-field-extra-annotation: "@lombok.Builder.Default"
    SparseLocationHistoryEntry:
      type: object
      required:
        - longitude
        - latitude
      properties:
        longitude:
          type: number
          format: double
          description: The longitude of the location history entry
          example: 103.8470393
        latitude:
          type: number
          format: double
          description: The latitude of the location history entry
          example: 1.2842441
    LocationHistoryEntry:
      allOf:
        - $ref: '#/components/schemas/SparseLocationHistoryEntry'
        - type: object
          required:
            - id
            - timestamp
          properties:
            id:
              type: number
              description: The unique identifier of the location history entry
              example: 42
            timestamp:
              type: string
              format: date-time
              description: The timestamp of the location history entry
              example: 2024-01-01T00:15:10.145Z
            horizontalAccuracy:
              type: number
              description: Approximate accuracy radius of the location measurement, in meters. A lower value means better precision.
              example: 20
            verticalAccuracy:
              type: number
              description: Approximate accuracy of the altitude measurement, in meters. A lower value means better precision.
              example: 5
            altitude:
              type: number
              description: Altitude above the WGS84 reference ellipsoid, in meters.
              example: 150
            heading:
              type: number
              description: Heading in degrees east of true north, from 0 to 359.
              example: 90
            velocity:
              type: number
              description: Measured velocity (ground speed) in meters per second.
              example: 5
            source:
              type: string
              enum:
                - GOOGLE_IMPORT
                - THEREABOUT_API
              description: The source of the location measurement
              example: GOOGLE_IMPORT
            estimatedIsoCountryCode:
              type: string
              description: The estimated ISO 3166-1 alpha-2 country code of the location.
              example: CH

    ThereaboutBaseErrorModel:
      type: object
      required:
        - requestId
        - errorMessageParameters
        - errorMessageTranslationKey
        - extraInformation
      properties:
        requestId:
          type: string
        errorMessageTranslationKey:
          type: string
        errorMessageParameters:
          type: array
          items:
            type: string
          x-field-extra-annotation: "@lombok.Builder.Default"
        extraInformation:
          type: string
        stacktrace:
          type: string
    FrontendConfigurationResponse:
      type: object
      required:
        - googleMapsApiKey
      properties:
        googleMapsApiKey:
          type: string
          example: TEST_KEY_ASJHKASHDASJDDSA

  responses:
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ThereaboutBaseErrorModel"
    404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ThereaboutBaseErrorModel"
    409:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ThereaboutBaseErrorModel"
    500:
      description: Generic Internal Server Error Response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ThereaboutBaseErrorModel"
    502:
      description: Bad Gateway
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ThereaboutBaseErrorModel"
